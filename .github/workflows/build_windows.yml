name: Build Windows Executable

on:
  release:
    types: [created]
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    permissions:
      contents: write   # 允许写入 Release 资源

    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt -i https://pypi.tuna.tsinghua.edu.cn/simple
        pip install pyinstaller -i https://pypi.tuna.tsinghua.edu.cn/simple
      
    - name: Check directory structure
      run: |
        dir
        dir src
        dir turnstilePatch
    
    - name: Build executable
      shell: cmd
      run: |
        python -m PyInstaller --noconfirm --onefile --console ^
          --add-data "src/data;src/data" ^
          --add-data ".env.example;." ^
          --add-data "turnstilePatch;turnstilePatch" ^
          --name "CursorAutoFree" ^
          --hidden-import=dotenv ^
          --hidden-import=requests ^
          --hidden-import=colorama ^
          --hidden-import=DrissionPage ^
          --hidden-import=selenium ^
          --hidden-import=webdriver_manager ^
          "run.py"


        
        # 复制必要文件到发布目录
        copy requirements.txt dist\
        copy README.md dist\
        copy .env.example dist\.env.example
        
        # 创建启动批处理文件
        echo @echo off > dist\启动程序.bat
        echo title Cursor Half Auto >> dist\启动程序.bat
        echo echo 正在启动Cursor Half Auto... >> dist\启动程序.bat
        echo CursorAutoFree.exe >> dist\启动程序.bat
        echo pause >> dist\启动程序.bat
        
        # 压缩文件
        cd dist
        powershell Compress-Archive -Path CursorAutoFree.exe, 启动程序.bat, .env.example, README.md, requirements.txt -DestinationPath CursorAutoFree_Windows.zip
    
    - name: Create artifact directory
      run: mkdir artifact
    
    - name: Copy artifact for upload
      run: copy dist\CursorAutoFree_Windows.zip artifact\
    
    - name: Release Artifact
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          const path = require('path');
          
          // 获取构建的ZIP文件
          const artifactPath = path.join(process.env.GITHUB_WORKSPACE, 'artifact', 'CursorAutoFree_Windows.zip');
          
          // 如果是手动触发，创建一个新的Release
          if (context.eventName === 'workflow_dispatch') {
            const date = new Date().toISOString().split('T')[0];
            const releaseTag = `auto-release-${date}`;
            
            // 创建Release
            const release = await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: releaseTag,
              name: `自动构建 ${date}`,
              body: `Windows 可执行文件自动构建 - ${date}`,
              draft: false,
              prerelease: false
            });
            
            // 上传构建产物到Release
            const fileContent = fs.readFileSync(artifactPath);
            await github.rest.repos.uploadReleaseAsset({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: release.data.id,
              name: 'CursorAutoFree_Windows.zip',
              data: fileContent
            });
          } 
          // 如果是通过创建Release触发，上传到现有Release
          else if (context.eventName === 'release') {
            // 获取当前Release
            const releaseId = context.payload.release.id;
            
            // 上传构建产物到Release
            const fileContent = fs.readFileSync(artifactPath);
            await github.rest.repos.uploadReleaseAsset({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: releaseId,
              name: 'CursorAutoFree_Windows.zip',
              data: fileContent
            });
          } 
